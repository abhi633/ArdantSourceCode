@page "/OTs"
@using ArdantOffical.Components.Users
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor htp
<FormLoader Istrue="@IsloaderShow"></FormLoader>
<div class="card card-green card-margin">
    <div class="card-header">
        <h3 class="card-title">User Management</h3>
        <div class="card-tools">
            <button type="button" id="btnAddUser" class="btn btn-primary pull-right" @onclick="()=>ShowAddUserSideBar()">
                <i class="fas fa-user-plus text-white" title="Add New User"></i> Add New
            </button>
        </div>
    </div>

    <div class="flex-shrink-0 mt-4">
        <div class="row ml-0 mr-0">
            <div class="col-md-8 d-flex">
                <span style="color:black;margin-right:2px;margin-top:8px" class="ml-3">Show</span>
                <div class="form-group ">

                    <InputSelect id="" class="form-control" ValueExpression="@(() => paginationObj.QuantityPerPage)" Value="@paginationObj.QuantityPerPage" ValueChanged="@((int value) => LoadRecords(1,value))">
                        <option value="25">25</option>
                        @foreach (var state in ListOfTablePages)
                        {
                            <option value="@state.Value">@state.Text</option>
                        }
                    </InputSelect>
                </div>
                <span style="color: black; margin-left: 2px; margin-top: 8px " class="">entries</span>
            </div>
            <div class="col-md-2">
                <input type="text" class="form-control" placeholder="Search" @bind-value="@SearchKey" @bind-value:event="oninput" />
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary rounded  ">Get Report</button>
                <button type="reset" class=" btn btn-secondary  rounded  " @onclick="()=>FormReset()">Reset</button>
            </div>
        </div>
    </div>
    <div class="card-body p-2">
        <PaginationCounter TotaPagesQuantity="totalPageQuantity" TotalCount="totalCount" CurrentPage="currentPage" RecordsPerPage="@paginationObj.QuantityPerPage"></PaginationCounter>

        <GenericList Elements="PerPageUserRecords">
            <NullTemplate>
                <LoaderPage></LoaderPage>
            </NullTemplate>
            <WithElementsTemplate>
                <table class="table table-striped table-sm projects dataTable no-footer dtr-inline table-responsive-sm">
                    <thead>
                        <tr class="card-header-gray">
                            <th>Name </th>
                            @* <th>Short Name</th> *@
                            <th>Email</th>
                            <th>User Name</th>
                            <th>User Status</th>
                            <th>User Role</th>
                            @*  <AuthorizeView Roles="Admin" Context="authContext">
                            <th>Two Factor GA</th>
                            <th>Skip Authenticator</th>
                            </AuthorizeView> *@
                            <th>User Access</th>
                            <th class="text-center">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in PerPageUserRecords)
                        {
                            var Check = ArdantOffical.SignalRHub.SystemActiveUsers.ActiveUsersList.Where(x => x.UserId == item.UserID).FirstOrDefault();
                            <tr>

                                @if (Check != null)
                                {
                                    <td>@item.Name  <i class='fa fa-circle nav-icon text-success float-right'></i></td>
                                }
                                else
                                {
                                    <td>@item.Name <i class='fa fa-circle nav-icon text-gray  float-right'></i></td>
                                }
                                @*  <td>@item.ShortName</td> *@
                                <td>@item.Email</td>
                                <td>@item.Username</td>
                                <td>@getUserStatus(item.UserStatus)</td>
                                <td>@GetUserRole(item.RoleID)</td>
                                @*  <AuthorizeView Roles="Admin" Context="authContext">
                            @if (item.EnableTwoFactor)
                            {
                            <td class="">
                            <RadzenSwitch @bind-Value=item.EnableTwoFactor Change=@(args =>  OnChange(args,  item.UserID)) />
                            </td>
                            }
                            else
                            {
                            <td class="">
                            <RadzenSwitch @bind-Value=item.EnableTwoFactor Change=@(args => OnChange(args, item.UserID)) Disabled="true" />
                            </td>
                            }
                            <td class="">
                            <RadzenSwitch @bind-Value=item.SkipAuthenticator Change=@(args =>  OnSkipChange(args,  item.UserID)) />
                            </td>
                            </AuthorizeView> *@
                                <td> <button class="btn btn-primary btn-xs" @onclick="()=>ShowMenuAccessSideBar(item.UserID)">Permission </button> </td>
                                <td class="text-center">
                                    <a href="#" @onclick:preventDefault @onclick="()=>ShowChangePasswordSideBar(item.UserID)" class="text-info" title="Change Password"><i class="fa fa-key"></i></a>&nbsp;
                                    <a href="#" @onclick:preventDefault @onclick="()=>ShowEditUserSideBar(item.UserID)" class="text-info" title="Edit"><i class="fa fa-pencil"></i></a>&nbsp;
                                    @if (item.UserID != Userinfo.UserId)
                                    {
                                        <a href="#" @onclick:preventDefault @onclick="()=>DeleteUser(item.SalesforceId)" class="text-danger" title="Delete"><i class="fa fa-trash-o"></i></a>
                                    }
                                    else
                                    {
                                        <a href="#" @onclick:preventDefault class="text-danger disabled" title="Sign in with another admin user to delete this account"><i class="fa fa-trash-o"></i></a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </WithElementsTemplate>
        </GenericList>
        <Pagination TotaPagesQuantity="totalPageQuantity" TotalCount="totalCount" CurrentPage="currentPage" Radius="2"
                    SelectedPage="SelectedPage" ShowrecordTable="@paginationObj.QuantityPerPage"></Pagination>


    </div>
    <!-- /.card-body -->
</div>
<AddUser IsVisible="AddSideBarVisibility" OnVisibilityChanged="OnAddUserVisibilityChanged" OnAddSuccess="OnAddSuccess"></AddUser>
<Edit IsEditVisible="EditSideBarVisibility" UserID="@UserID" OnEditVisibiltyChanged="OnEditUserVisibilityChanged" OnEditSuccess="OnEditSuccess"></Edit>
<ChangePassword IsChangePasswordPopupVisibile="ChangePasswordSideBarVisibility" UserID="@UserID" OnPasswordVisibiltyChanged="OnPasswordVisibiltyChanged" OnPasswordChangedSuccess="OnPasswordChangedSuccess"></ChangePassword>
<ModalShowpopup showModal="@responseDialogVisibility" Message="@responseBody" title="@responseHeader" OnVisibilityChangedModel="@OnVisibilityChangedModel"></ModalShowpopup>
<DeleteConfirmation showModal="@DeleteConfirmationVisibility" OnDeleteVisibilityChangedModel="OnDeleteConfirmationVisibilityChangedModel" OnDeleteAddSuccessModel="OnDeleteConfirmationSuccess"></DeleteConfirmation>
@*<MenuAccessComponent  EditID="@UserId" Visible="@MenuAccessSideBarVisibility" OnVisibilityChanged="OnEditMenuAccessVisibilityChanged" OnAddSuccess="OnMenuAccessSuccess"></MenuAccessComponent>*@
<MenuAccess EditID="@UserId" Visible="@MenuAccessSideBarVisibility" OnVisibilityChanged="OnEditMenuAccessVisibilityChanged" OnAddSuccess="OnMenuAccessSuccess"></MenuAccess>


<FgcToast TostModels="@TostModelclass"> </FgcToast>

@code {
    public string getUserStatus(int? status)
    {
        if (status == 1)
            return "Active";
        else
            return "Blocked";
    }
}
