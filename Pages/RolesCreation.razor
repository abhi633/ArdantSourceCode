@page "/RolesCreation"
@using ArdantOffical.Data.ModelVm.Users
@using ArdantOffical.Components.SystemconfigurationComponent
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor htp
<div class="card card-green card-margin">
    <div class="card-header">
        <h3 class="card-title">Roles List</h3>
        <div class="card-tools">
            <button type="button" id="btnAddUser" class="btn btn-primary pull-right" @onclick="()=>ShowAddUserSideBar()">
                <i class="fas fa-user-plus text-white" title="Add New Role"></i> Add New
            </button>
        </div>
    </div>
  
        <div class="flex-shrink-0 mt-4">
            <div class="row ml-0 mr-0">
                <div class="col-md-8 d-flex">
                    <span style="color:black;margin-right:2px;margin-top:8px" class="ml-3">Show</span>
                    <div class="form-group ">

                        <InputSelect id="" class="form-control" ValueExpression="@(() => paginationObj.QuantityPerPage)" Value="@paginationObj.QuantityPerPage" ValueChanged="@((int value) => LoadRecords(1,value))">
                            <option value="25">25</option>
                            @foreach (var state in ListOfTablePages)
                            {
                                <option value="@state.Value">@state.Text</option>
                            }
                        </InputSelect>
                    </div>
                    <span style="color: black; margin-left: 2px; margin-top: 8px " class="">entries</span>
                </div>
                <div class="col-md-2">
                    <input type="text" class="form-control" placeholder="Search" @bind-value="@SearchKey" @bind-value:event="oninput" />
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary rounded  ">Get Report</button>
                    <button type="reset" class=" btn btn-secondary  rounded  " @onclick="()=>FormReset()">Reset</button>
                </div>
            </div>
        </div>
   
    <div class="card-body p-2">


        <PaginationCounter TotaPagesQuantity="ListOfRecord.TotalPages" TotalCount="ListOfRecord.TotalCount" CurrentPage="currentPage" RecordsPerPage="@paginationObj.QuantityPerPage"></PaginationCounter>

        <GenericList Elements="ListOfRecord?.ListOfData">
            <NullTemplate>
                <LoaderPage></LoaderPage>
            </NullTemplate>
            <WithElementsTemplate>
                <table class="table table-striped table-sm projects dataTable no-footer dtr-inline">
                    <thead>
                        <tr class="card-header-gray">
                            <th>ID </th>
                            <th>Name </th>
                            <th>Meaning full Name </th>
                            <th class="text-center">Action </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ListOfRecord.ListOfData as List<RolesVM>)
                        {
                            <tr>
                                <td>@item.Id</td>
                                <td>@item.RoleName</td>
                                <td>@item.MeaningfulName</td>
                                <td class="text-center">
                                    <a href="#" @onclick:preventDefault @onclick="()=>ShowEditSideBar(item.Id)" class="text-success" title="Edit"><i class="fa fa-pencil"></i></a>&nbsp;&nbsp;
                                    <a href="#" @onclick:preventDefault @onclick="()=>DeleteModel(item.Id)" class="text-danger" title="Delete"><i class="fa fa-trash-o"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </WithElementsTemplate>
        </GenericList>
        <Pagination TotaPagesQuantity="ListOfRecord.TotalPages" TotalCount="ListOfRecord.TotalCount" CurrentPage="currentPage" Radius="3"
                    SelectedPage="SelectedPage" ShowrecordTable="@paginationObj.QuantityPerPage"></Pagination>
    </div>
    <!-- /.card-body -->
</div>
<AddRolesCreation IsVisible="AddSideBarVisibility" RoleId="@RoleId" OnVisibilityChanged="OnAddVisibilityChanged" OnAddSuccess="OnAddSuccess"></AddRolesCreation>
@*<Edit IsEditVisible="EditSideBarVisibility" UserID="@UserID" OnEditVisibiltyChanged="OnEditUserVisibilityChanged" OnEditSuccess="OnEditSuccess"></Edit>*@
<ModalShowpopup showModal="@PopupDialogs.responseDialogVisibility" Message="@PopupDialogs.responseBody" title="@PopupDialogs.responseHeader" OnVisibilityChangedModel="@OnVisibilityChangedModel"></ModalShowpopup>
<DeleteConfirmation showModal="@DeleteConfirmationVisibility" OnDeleteVisibilityChangedModel="OnDeleteConfirmationVisibilityChangedModel" OnDeleteAddSuccessModel="OnDeleteConfirmationSuccess"></DeleteConfirmation>
<FgcToast TostModels="@TostModelclass"> </FgcToast>
@code {
    public string getUserStatus(int? status)
    {
        if (status == 1)
            return "Active";
        else
            return "Blocked";
    }
}
